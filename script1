#!/bin/bash
# FYI, this command removes file abc if it is empty: [ -s abc ] || rm -f abc

usage="usage: $0 encryptionport decryptionport"

#use the standard version of echo
echo=/bin/echo

#Make sure we have the right number of arguments
if test $# -gt 2 -o $# -lt 2
then
	${echo} $usage 1>&2
	exit 1
fi

#Record the ports passed in
encport=$1
decport=$2

#Run the daemons
./enc_server $encport &
./dec_server $decport &

${echo} '#-----------------------------------------'
${echo} '#START OF GRADING SCRIPT'
${echo} '#keygen 20 > key20'
./keygen 20 > key20
${echo} "#5 POINTS: key20 must exist"
[ -s key20 ] || rm -f key20
if [ -f key20 ]; then ${echo} 'key20 exists!'; else ${echo} 'key20 DOES NOT EXIST'; fi
${echo}
${echo} "#-----------------------------------------"
${echo} "#5 POINTS: Number of characters in key20, should be 21:"
wc -m key20
${echo}
${echo} "#-----------------------------------------"
${echo} '#keygen 70000 > key70000'
./keygen 70000 > key70000
${echo} "#5 POINTS: Number of characters in key70000, should be 70001:"
[ -s key70000 ] || rm -f key70000
wc -m key70000
${echo}
${echo} "#-----------------------------------------"
${echo} '#./enc_client plaintext1 key20 $encport'
${echo} "#10 POINTS: Should return error about too-short key"
./enc_client plaintext1 key20 $encport
${echo}
${echo} "#-----------------------------------------"
${echo} '#./enc_client plaintext1 key70000 $encport'
${echo} "#20 POINTS: Should return encrypted version of plaintext1"
./enc_client plaintext1 key70000 $encport
${echo}
${echo} '#-----------------------------------------'
${echo} '#./enc_client plaintext1 key70000 $encport > ciphertext1'
./enc_client plaintext1 key70000 $encport > ciphertext1
${echo} "#10 POINTS: ciphertext1 must exist"
[ -s ciphertext1 ] || rm -f ciphertext1
if [ -f ciphertext1 ]; then ${echo} 'ciphertext1 exists!'; else ${echo} 'ciphertext1 DOES NOT EXIST'; fi
${echo}
${echo} '#-----------------------------------------'
${echo} '#10 POINTS: ciphertext1 must be same number of chars as source'
${echo} '#wc -m plaintext1'
wc -m plaintext1
${echo} '#Should be same: wc -m ciphertext1'
wc -m ciphertext1
${echo}
${echo} '#-----------------------------------------'
${echo} '#5 POINTS: ciphertext1 should look encrypted'
cat ciphertext1
${echo}
${echo} '#-----------------------------------------'
${echo} '#./dec_client ciphertext1 key70000 $encport'
${echo} '#5 POINTS: Should fail giving error that ./dec_client cannot find dec_server'
./dec_client ciphertext1 key70000 $encport
${echo}
${echo} '#-----------------------------------------'
${echo} '#20 POINTS: should return decrypted ciphertext1 that matches source'
${echo} '#cat plaintext1'
cat plaintext1
${echo} '#./dec_client ciphertext1 key70000 $decport'
./dec_client ciphertext1 key70000 $decport
${echo}
${echo} '#-----------------------------------------'
${echo} '#./dec_client ciphertext1 key70000 $decport > plaintext1_a'
./dec_client ciphertext1 key70000 $decport > plaintext1_a
${echo} "#10 POINTS: plaintext1_a must exist"
[ -s plaintext1_a ] || rm -f plaintext1_a
if [ -f plaintext1_a ]; then ${echo} 'plaintext1_a exists!'; else ${echo} 'plaintext1_a DOES NOT EXIST'; fi
${echo}
${echo} '#-----------------------------------------'
${echo} '#5 POINTS: plaintext1 must be same number of chars as plaintext1_a'
${echo} '#wc -m plaintext1'
wc -m plaintext1
${echo} '#Should be same: wc -m ciphertext1'
wc -m plaintext1_a
${echo}
${echo} '#-----------------------------------------'
${echo} '#20 POINTS: concurrent test of encryption - look for 4 ciphertext# files'
${echo} '#5 POINTS: Should be only one error about plaintext5 being bad'
rm -f ciphertext*
rm -f plaintext*_*
./enc_client plaintext1 key70000 $encport > ciphertext1
./enc_client plaintext2 key70000 $encport > ciphertext2
./enc_client plaintext3 key70000 $encport > ciphertext3
./enc_client plaintext4 key70000 $encport > ciphertext4
./enc_client plaintext5 key70000 $encport > ciphertext5
[ -s ciphertext1 ] || rm -f ciphertext1
[ -s ciphertext2 ] || rm -f ciphertext2
[ -s ciphertext3 ] || rm -f ciphertext3
[ -s ciphertext4 ] || rm -f ciphertext4
[ -s ciphertext5 ] || rm -f ciphertext5
ls
${echo}
${echo} '#-----------------------------------------'
${echo} '#15 POINTS: concurrent test of decryption - look for 4 plaintext#_a files'
./dec_client ciphertext1 key70000 $decport > plaintext1_a
./dec_client ciphertext2 key70000 $decport > plaintext2_a
./dec_client ciphertext3 key70000 $decport > plaintext3_a
./dec_client ciphertext4 key70000 $decport > plaintext4_a
[ -s plaintext1_a ] || rm -f plaintext1_a
[ -s plaintext2_a ] || rm -f plaintext2_a
[ -s plaintext3_a ] || rm -f plaintext3_a
[ -s plaintext4_a ] || rm -f plaintext4_a
ls
killall enc_*
killall dec_*
${echo}
${echo} '#SCRIPT COMPLETE'
${echo}
